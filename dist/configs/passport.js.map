{"version":3,"sources":["../../src/configs/passport.js"],"names":["User","require","passport","bcrypt","LocalStrategy","serializeUser","loggedInUser","cb","_id","deserializeUser","userIdFromSession","findById","err","userDocument","use","username","password","next","findOne","foundUser","message","compareSync"],"mappings":";;AAAA,IAAMA,OAAOC,QAAQ,gBAAR,CAAb;AACA,IAAMC,WAAWD,QAAQ,UAAR,CAAjB;AACA,IAAME,SAAOF,QAAQ,QAAR,CAAb;AACA,IAAMG,gBAAcH,QAAQ,gBAAR,CAApB;;AAEAC,SAASG,aAAT,CAAuB,UAACC,YAAD,EAAeC,EAAf,EAAoB;AACvCA,KAAG,IAAH,EAASD,aAAaE,GAAtB;AACH,CAFD;;AAIAN,SAASO,eAAT,CAAyB,UAACC,iBAAD,EAAoBH,EAApB,EAA2B;AAChDP,OAAKW,QAAL,CAAcD,iBAAd,EAAiC,UAACE,GAAD,EAAMC,YAAN,EAAuB;AACtD,QAAID,GAAJ,EAAS;AACPL,SAAGK,GAAH;AACA;AACD;AACDL,OAAG,IAAH,EAASM,YAAT;AACD,GAND;AAOD,CARH;;AAUEX,SAASY,GAAT,CACE,IAAIV,aAAJ,CAAkB,UAACW,QAAD,EAAWC,QAAX,EAAqBC,IAArB,EAA8B;AAC9CjB,OAAKkB,OAAL,CAAa,EAAEH,kBAAF,EAAb,EAA2B,UAACH,GAAD,EAAMO,SAAN,EAAoB;AAC7C,QAAIP,GAAJ,EAAS;AACPK,WAAKL,GAAL;AACA;AACD;;AAED,QAAI,CAACO,SAAL,EAAgB;AACdF,WAAK,IAAL,EAAW,KAAX,EAAkB,EAAEG,SAAS,qBAAX,EAAlB;AACA;AACD;;AAED,QAAI,CAACjB,OAAOkB,WAAP,CAAmBL,QAAnB,EAA6BG,UAAUH,QAAvC,CAAL,EAAuD;AACrDC,WAAK,IAAL,EAAW,KAAX,EAAkB,EAAEG,SAAS,qBAAX,EAAlB;AACA;AACD;;AAEDH,SAAK,IAAL,EAAWE,SAAX;AACD,GAjBD;AAkBD,CAnBD,CADF","file":"passport.js","sourcesContent":["const User = require(\"../models/User\");\nconst passport = require(\"passport\");\nconst bcrypt=require(\"bcrypt\");\nconst LocalStrategy=require(\"passport-local\")\n\npassport.serializeUser((loggedInUser, cb)=>{\n    cb(null, loggedInUser._id);\n})\n\npassport.deserializeUser((userIdFromSession, cb) => {\n    User.findById(userIdFromSession, (err, userDocument) => {\n      if (err) {\n        cb(err);\n        return;\n      }\n      cb(null, userDocument);\n    });\n  });\n  \n  passport.use(\n    new LocalStrategy((username, password, next) => {\n      User.findOne({ username }, (err, foundUser) => {\n        if (err) {\n          next(err);\n          return;\n        }\n  \n        if (!foundUser) {\n          next(null, false, { message: \"Incorrect username.\" });\n          return;\n        }\n  \n        if (!bcrypt.compareSync(password, foundUser.password)) {\n          next(null, false, { message: \"Incorrect password.\" });\n          return;\n        }\n  \n        next(null, foundUser);\n      });\n    })\n  );"]}