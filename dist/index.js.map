{"version":3,"sources":["../src/index.js"],"names":["require","config","session","passport","mongoose","connect","useNewUrlParser","then","console","log","x","connections","name","catch","error","err","app_name","app","server","http","createServer","use","exposedHeaders","corsHeaders","bodyParser","json","limit","bodyLimit","MongoStore","secret","process","env","SESSION_SECRET","reserve","saveUninitialized","store","mongooseConnection","connection","listen","PORT","port","address","index","authRoutes"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,QAAQ,QAAR,EAAkBC,MAAlB;AACA,IAAMC,UAAUF,QAAQ,iBAAR,CAAhB;AACA,IAAMG,WAAWH,QAAQ,UAAR,CAAjB;;AAEAI,mBACGC,OADH,CACW,0CADX,EACuD;AACnDC,mBAAiB;AADkC,CADvD,EAIGC,IAJH,CAIQ,aAAK;AACTC,UAAQC,GAAR,0CACyCC,EAAEC,WAAF,CAAc,CAAd,EAAiBC,IAD1D;AAGD,CARH,EASGC,KATH,CASS,eAAO;AACZL,UAAQM,KAAR,CAAc,2BAAd,EAA2CC,GAA3C;AACD,CAXH;;AAaA,IAAMC,WAAWhB,QAAQ,iBAAR,EAA2BY,IAA5C;;AAEA,IAAMK,MAAM,wBAAZ;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEA;AACAA,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAJ,IAAII,GAAJ,CAAQ,oBAAK;AACZC,kBAAgBrB,iBAAOsB;AADX,CAAL,CAAR;;AAIAN,IAAII,GAAJ,CAAQG,qBAAWC,IAAX,CAAgB;AACvBC,SAAQzB,iBAAO0B;AADQ,CAAhB,CAAR;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAMC,aAAa5B,QAAQ,eAAR,EAAyBE,OAAzB,CAAnB;AACAe,IAAII,GAAJ,CACEnB,QAAQ;AACN2B,UAAQC,QAAQC,GAAR,CAAYC,cADd;AAENC,WAAS,KAFH;AAGNC,qBAAmB,KAHb;AAINC,SAAO,IAAIP,UAAJ,CAAe;AACpBQ,wBAAoBhC,mBAASiC;AADT,GAAf;AAJD,CAAR,CADF;;AAWApB,IAAIC,MAAJ,CAAWoB,MAAX,CAAkBR,QAAQC,GAAR,CAAYQ,IAAZ,IAAoBtC,iBAAOuC,IAA7C,EAAmD,YAAM;AACxDhC,UAAQC,GAAR,sBAA+BQ,IAAIC,MAAJ,CAAWuB,OAAX,GAAqBD,IAApD;AACA,CAFD;;AAIA,IAAME,QAAQ1C,QAAQ,gBAAR,CAAd;AACAiB,IAAII,GAAJ,CAAQ,GAAR,EAAYqB,KAAZ;;AAEA,IAAMC,aAAY3C,QAAQ,eAAR,CAAlB;AACAiB,IAAII,GAAJ,CAAQ,WAAR,EAAoBsB,UAApB;;kBAEe1B,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport middleware from './middleware';\nimport api from './api';\nimport config from './config.json';\nimport mongoose from 'mongoose';\n\nrequire(\"dotenv\").config();\nconst session = require(\"express-session\");\nconst passport = require(\"passport\");\n\nmongoose\n  .connect(\"mongodb://localhost/spend-smart-database\", {\n    useNewUrlParser: true\n  })\n  .then(x => {\n    console.log(\n      `Connected to Mongo! Database name: \"${x.connections[0].name}\"`\n    );\n  })\n  .catch(err => {\n    console.error(\"Error connecting to mongo\", err);\n  });\n\nconst app_name = require(\"../package.json\").name;\n\nconst app = express();\napp.server = http.createServer(app);\n\n// logger\napp.use(morgan('dev'));\n\n// 3rd party middleware\napp.use(cors({\n\texposedHeaders: config.corsHeaders\n}));\n\napp.use(bodyParser.json({\n\tlimit : config.bodyLimit\n}));\n\n// connect to db\n// initializeDb( db => {\n\n// \t// internal middleware\n// \tapp.use(middleware({ config, db }));\n\n// \t// api router\n// \tapp.use('/api', api({ config, db }));\n\n// \tapp.server.listen(process.env.PORT || config.port, () => {\n// \t\tconsole.log(`Started on port ${app.server.address().port}`);\n// \t});\n// });\n\nconst MongoStore = require(\"connect-mongo\")(session);\napp.use(\n  session({\n    secret: process.env.SESSION_SECRET,\n    reserve: false,\n    saveUninitialized: false,\n    store: new MongoStore({\n      mongooseConnection: mongoose.connection\n    })\n  })\n);\n\napp.server.listen(process.env.PORT || config.port, () => {\n\tconsole.log(`Started on port ${app.server.address().port}`);\n});\n\nconst index = require('./routes/index')\napp.use(\"/\",index);\n\nconst authRoutes =require(\"./routes/auth\")\napp.use(\"/api/auth\",authRoutes);\n\nexport default app;\n"]}