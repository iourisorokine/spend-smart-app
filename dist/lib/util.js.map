{"version":3,"sources":["../../src/lib/util.js"],"names":["toRes","res","status","err","thing","send","toObject","json"],"mappings":";;;;;QAUgBA,K,GAAAA,K;;AAThB;;;;;;;;;AASO,SAASA,KAAT,CAAeC,GAAf,EAAgC;AAAA,MAAZC,MAAY,uEAAL,GAAK;;AACtC,SAAO,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACtB,QAAID,GAAJ,EAAS,OAAOF,IAAIC,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqBF,GAArB,CAAP;;AAET,QAAIC,SAAS,OAAOA,MAAME,QAAb,KAAwB,UAArC,EAAiD;AAChDF,cAAQA,MAAME,QAAN,EAAR;AACA;AACDL,QAAIC,MAAJ,CAAWA,MAAX,EAAmBK,IAAnB,CAAwBH,KAAxB;AACA,GAPD;AAQA","file":"util.js","sourcesContent":["\n/**\tCreates a callback that proxies node callback style arguments to an Express Response object.\n *\t@param {express.Response} res\tExpress HTTP Response\n *\t@param {number} [status=200]\tStatus code to send on success\n *\n *\t@example\n *\t\tlist(req, res) {\n *\t\t\tcollection.find({}, toRes(res));\n *\t\t}\n */\nexport function toRes(res, status=200) {\n\treturn (err, thing) => {\n\t\tif (err) return res.status(500).send(err);\n\n\t\tif (thing && typeof thing.toObject==='function') {\n\t\t\tthing = thing.toObject();\n\t\t}\n\t\tres.status(status).json(thing);\n\t};\n}\n"]}